#!/bin/bash -e


function __install_helm_activator() {
  local self=$(readlink -f "${BASH_SOURCE[0]}")
  local dir=$(dirname $self)

  local activator="${1}"
  local version="${2}"

  [[ ! -d $(dirname "${config}") ]] && mkdir -p $(dirname "${config}")
  cat <<EOD > "${config}"
#!/bin/bash

export HELM_VERSION=${version}
export HELM_ARCH=${arch}
export HELM_HOME=\${TOOLS_HOME:=\$HOME/tools}/helm-\${HELM_VERSION}

export PATH=\${HELM_HOME}/\${HELM_ARCH}:\${PATH}
EOD
  chmod ugo+x "${config}"
  echo "${config}"
}    

function __install_helm() {
  local self=$(readlink -f "${BASH_SOURCE[0]}")
  local dir=$(dirname $self)

  ##FIXME: local version=${version:-$(wget -q -O - https://storage.googleapis.com/kubernetes-release/release/stable.tx | cut -c2-)}
  local version=${version:-"3.1.1"}
  local version=${1:-"${version}"}

  ##FIXME: local arch=${2:-"$HELM_ARCH"}
  local arch=${arch:-"linux-amd64"}

  local file=helm-v${version}-${arch}.tar.gz
  local url=https://get.helm.sh/${file}
  local folder=helm-${version}
  local symlink=helm

  local config="${VIRTUAL_ENV:-${HOME}/.local/share/bash-scripts}"/postactivate/postactivate.d/271-helm.sh
   __install_helm_activator "${config}" "${version}"

  "${dir}"/bash_install_tar "${url}" "${file}" "${folder}" "${symlink}"
}


if [ $_ != $0 ]; then
  # echo "Script is being sourced: list all functions"
  grep -E "^function __" $(readlink -f "${BASH_SOURCE[0]}") | cut -d' ' -f2 | sed 's/()//'
else
  # echo "Script is a subshell: execute last function"
  $(grep -E "^function __" $(readlink -f "${BASH_SOURCE[0]}") | cut -d' ' -f2  | sed 's/()//' | tail -1) "$@"
fi
