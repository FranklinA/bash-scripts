#!/bin/bash -e

function __install_scala() {
  self=$(readlink -f "${BASH_SOURCE[0]}")
  dir=$(dirname $self)

  which wget >/dev/null 2>&1 || sudo apt install wget -y

  local latest=https://github.com/scala/scala/releases/latest
  local version=$(wget -q -SO- -T 5 -t 1 "${latest}" 2>/dev/null | fgrep location: | cut -d' ' -f2 | sed -E 's|.*\/v(.*)|\1|')
  local version=${version:-"2.12.12"}
  local version=${1:-"${version}"}
  local major=$(echo ${version} | cut -d. -f 1-2)

  local config="${VIRTUAL_ENV:-"${HOME}"}/.bashrc-scripts/installed/351-scala.sh"
  [[ ! -d $(dirname "${config}") ]] && mkdir -p $(dirname "${config}")
  cat <<EOD >"${config}"
#!/bin/bash

export SCALA_VERSION=${version}
export SCALA_HOME=\${TOOLS_HOME:=\$HOME/tools}/scala-v\${SCALA_VERSION}

export PATH=\${SCALA_HOME}/bin:\${PATH}
EOD

  if [[ $version =~ ^(0\.).* ]] ;then
    local file=dotty-${version}.tar.gz
    local url=https://github.com/lampepfl/dotty/releases/download/${version}/${file}
    local folder=dotty-${version}
    local symlink=dotty-${major}
    "${dir}"/bash_install_tar "${url}" "${file}" "${folder}" "${symlink}" "${config}"
  else
    local file=scala-${version}.tgz
    local url=https://scala-lang.org/files/archive/${version}/${file}
    local folder=scala-${version}
    local symlink=scala-${major}
    "${dir}"/bash_install_tar "${url}" "${file}" "${folder}" "${symlink}" "${config}"
    "${dir}"/bash_install_tar "https://scala-lang.org/files/archive/scala-docs-${version}.txz" "scala-docs-${version}.txz" "scala-${version}" "scala-${major}" "" "--strip-components=1"
    "${dir}"/bash_httrack "https://www.scala-lang.org/files/archive/spec/${major}" "scala-${version}/spec"
    "${dir}"/bash_httrack "https://scala-lang.org/files/archive/api/${version}"   "scala-${version}/api"
  fi
}

if [ $_ != $0 ]; then
  # echo "Script is being sourced: list all functions"
  self=$(readlink -f "${BASH_SOURCE[0]}")
  dir=$(dirname $self)
  grep -E "^function __" $self | cut -d' ' -f2 | sed 's/()//'
else
  # echo "Script is a subshell: execute last function"
  self=$(readlink -f "${BASH_SOURCE[0]}")
  dir=$(dirname $self)
  cmd=$(grep -E "^function __" $self | cut -d' ' -f2  | sed 's/()//' | tail -1)
  $cmd $*
fi
